[1/10] Performing build step for 'bootloader'
[1/1] cd /Users/yikunhao/Desktop/WS2425/Praktikum_IoT/Blink-basic/build/bootloader/esp-idf/esptool_py && /Users/yikunhao/.espressif/python_env/idf5.3_py3.10_env/bin/python /Users/yikunhao/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /Users/yikunhao/Desktop/WS2425/Praktikum_IoT/Blink-basic/build/bootloader/bootloader.bin
Bootloader binary size 0x6880 bytes. 0x780 bytes (7%) free.
[2/10] No install step for 'bootloader'
[3/10] Completed 'bootloader'
[4/10] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/blink.c.obj
[5/10] Linking C static library esp-idf/main/libmain.a
[6/10] Generating ld/sections.ld
[7/10] Linking CXX executable blink.elf
[8/10] Generating binary image from built executable
esptool.py v4.8.1
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /Users/yikunhao/Desktop/WS2425/Praktikum_IoT/Blink-basic/build/blink.bin
[9/10] cd /Users/yikunhao/Desktop/WS2425/Praktikum_IoT/Blink-basic/build/esp-idf/esptool_py && /Users/yikunhao/.espressif/python_env/idf5.3_py3.10_env/bin/python /Users/yikunhao/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /Users/yikunhao/Desktop/WS2425/Praktikum_IoT/Blink-basic/build/partition_table/partition-table.bin /Users/yikunhao/Desktop/WS2425/Praktikum_IoT/Blink-basic/build/blink.bin
blink.bin binary size 0x2c250 bytes. Smallest app partition is 0x100000 bytes. 0xd3db0 bytes (83%) free.
[9/10] cd /Users/yikunhao/esp/esp-idf/components/esptool_py && /Users/yikunhao/anaconda3/lib/python3.10/site-packages/cmake/data/bin/cmake -D IDF_PATH=/Users/yikunhao/esp/esp-idf -D "SERIAL_TOOL=/Users/yikunhao/.espressif/python_env/idf5.3_py3.10_env/bin/python;;/Users/yikunhao/esp/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/Users/yikunhao/Desktop/WS2425/Praktikum_IoT/Blink-basic/build -P /Users/yikunhao/esp/esp-idf/components/esptool_py/run_serial_tool.cmake
esptool.py --chip esp32 -p /dev/tty.usbserial-015E0000 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x10000 blink.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.8.1
Serial port /dev/tty.usbserial-015E0000
Connecting....
Chip is ESP32-D0WD-V3 (revision v3.0)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: 94:3c:c6:c2:26:08
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x0003cfff...
Flash will be erased from 0x00008000 to 0x00008fff...
SHA digest in image updated
Compressed 26752 bytes to 16372...
Writing at 0x00001000... (100 %)
Wrote 26752 bytes (16372 compressed) at 0x00001000 in 0.8 seconds (effective 263.2 kbit/s)...
Hash of data verified.
Compressed 180816 bytes to 96498...
Writing at 0x00010000... (16 %)
Writing at 0x0001c34c... (33 %)
Writing at 0x00021e3d... (50 %)
Writing at 0x00027aa3... (66 %)
Writing at 0x0002f20c... (83 %)
Writing at 0x000366db... (100 %)
Wrote 180816 bytes (96498 compressed) at 0x00010000 in 3.0 seconds (effective 484.0 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.1 seconds (effective 285.3 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
