[1/13] Performing build step for 'bootloader'
[1/1] cd /Users/yikunhao/Desktop/WS2425/Praktikum_IoT/Template/build/bootloader/esp-idf/esptool_py && /Users/yikunhao/.espressif/python_env/idf5.3_py3.10_env/bin/python /Users/yikunhao/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /Users/yikunhao/Desktop/WS2425/Praktikum_IoT/Template/build/bootloader/bootloader.bin
Bootloader binary size 0x6880 bytes. 0x780 bytes (7%) free.
[2/13] No install step for 'bootloader'
[3/13] Completed 'bootloader'
[4/13] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
[5/13] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/wifi.c.obj
[6/13] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/sntp.c.obj
[7/13] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/gauge.c.obj
[8/13] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/mqtt.c.obj
[9/13] Linking C static library esp-idf/main/libmain.a
[10/13] Generating ld/sections.ld
[11/13] Linking CXX executable PIR.elf
[12/13] Generating binary image from built executable
esptool.py v4.8.1
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /Users/yikunhao/Desktop/WS2425/Praktikum_IoT/Template/build/PIR.bin
[13/13] cd /Users/yikunhao/Desktop/WS2425/Praktikum_IoT/Template/build/esp-idf/esptool_py && /Users/yikunhao/.espressif/python_env/idf5.3_py3.10_env/bin/python /Users/yikunhao/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /Users/yikunhao/Desktop/WS2425/Praktikum_IoT/Template/build/partition_table/partition-table.bin /Users/yikunhao/Desktop/WS2425/Praktikum_IoT/Template/build/PIR.bin
PIR.bin binary size 0xe9d10 bytes. Smallest app partition is 0x177000 bytes. 0x8d2f0 bytes (38%) free.
